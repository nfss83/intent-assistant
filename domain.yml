version: '2.0'
config:
  store_entities_as_slots: true
session_config:
  session_expiration_time: 80
  carry_over_slots_to_new_session: true
intents:
- greet:
    use_entities: true
- bot_challenge:
    use_entities: true
- request:
    use_entities: true
- help:
    use_entities: true
- affirm:
    use_entities: true
- out_of_scope:
    use_entities: true
- thank:
    use_entities: true
- farewell:
    use_entities: true
- deny:
    use_entities: true
- inform:
    use_entities: true
entities:
- type_service
- number
- embb_scenario
- urllc_scenario
- other_service
- miot_scenario
- hdllc_scenario
- v2x_scenario
- custom_service
slots:
  number:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  type_service:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - miot
    - embb
    - urllc
    - v2x
    - hmtc
    - hdllc
    - other
  embb_scenario:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - urban
    - rural
    - indoor
    - crowd
    - dense_urban
    - broadcast
    - train
    - vehicle
    - airplane
  urllc_scenario:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - automation
    - remote_control
    - monitoring
    - medium_voltage
    - high_voltage
    - its
  throughput:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  up_throughput:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  user_throughput:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  user_up_throughput:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  availability:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 100.0
    min_value: 0.0
  qos:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 100.0
    min_value: 0.0
  device_velocity:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1000.0
    min_value: 0.0
  ue_density:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 10000.0
    min_value: 0.0
  mmte:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  continuity:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  access:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  user_eq:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 100000.0
    min_value: 0.0
  dLThptPerSlice:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  dLThptPerUser:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  uLThptPerSlice:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  uLThptPerUser:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  jitter:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  latency:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  maxNumberofUsers:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  packetLoss:
    type: rasa.shared.core.slots.FloatSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
    max_value: 1.0
    min_value: 0.0
  customService:
    type: rasa.shared.core.slots.TextSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
  email:
    type: rasa.shared.core.slots.TextSlot
    initial_value: null
    auto_fill: true
    influence_conversation: false
  miot_scenario:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - medical
    - standard
  hdllc_scenario:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - rendering
    - gaming
  v2x_scenario:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - advanced
    - remote
  other_service:
    type: rasa.shared.core.slots.CategoricalSlot
    initial_value: null
    auto_fill: true
    influence_conversation: true
    values:
    - remote_drone
    - surgey
    - streaming
    - safety
responses:
  utter_greet:
  - text: Hello! How can I help you?
  - text: Hi! I'm your Service Request  Assistant. What do you need?
  utter_ask_email:
  - text: |
      What is your email address?
  utter_out_of_scope:
  - text: Sorry, I do not enable to attend to you about that. Try to request a network service, for instance.
  utter_goodbye:
  - text: Goodbye! A pleasure to talk to you.
  utter_iamabot:
  - text: I am a bot ;-)
  utter_ask_type_service:
  - buttons:
    - payload: /inform{{"type_service":"embb"}}
      title: eMBB
    - payload: /inform{{"type_service":"urllc"}}
      title: URLLC
    - payload: /inform{{"type_service":"MIoT"}}
      title: MIoT
    - payload: /inform{{"type_service":"V2X"}}
      title: V2X
    - payload: /inform{{"type_service":"HMTC"}}
      title: HMTC
    text: Which type of service do you want to request?
  utter_welcome:
  - text: You're welcome!
  utter_requested_service:
  - text: Great! You requested a service {type_service}
  utter_ask_service:
  - buttons:
    - payload: embb
      title: eMBB
    - payload: urllc
      title: URLLC
    - payload: miot
      title: MIoT
    - payload: v2x
      title: V2X
    - payload: hmtc
      title: HMTC
    - payload: hdllc
      title: HDLLC
    - payload: other
      title: Other
    - payload: custom
      title: Custom
    text: Which type of service do you want to request? (enhanced Mobile Broadband - eMBB, Ultra-Reliable and Low-Latency Communications - URLLC, Massive IoT - MIoT, Vehicle-to-Everything - V2X, High-Performance Machine-Type Communications - HMTC, High Data-Rate and Low-Latency Communications - HDLLC)
  utter_requested_service_SLA:
  - text: Great. You requested the service {type_service}. Would you like to specify the requirements for that service (SLA)?
  utter_no_sla:
  - text: Don't worry. We are going to deploy your service.
  utter_availability:
  - text: Availability?
  utter_device_velocity:
  - text: Device Velocity?
  utter_max_throughput:
  - text: Max Throughput?
  utter_availability_requested:
  - text: Availability {number} requested.
  utter_throughput_requested:
  - text: Throughput {number} requested.
  utter_ask_service_form_availability:
  - text: Availability of requested service (%), e.g., 99.5, 99.99?
  utter_collect_metrics:
  - text: 'Please, inform the minimum set of attributes needed for service: {otherService}.'
  utter_ask_urllc_form_throughput:
  - text: Maximum downlink throughput per UE (Mbps)?
  utter_ask_urllc_form_up_throughput:
  - text: Maximum uplink throughput per UE (Mbps)?
  utter_ask_urllc_form_qos:
  - text: Service quality of service (QoS)?
  utter_ask_urllc_form_device_velocity:
  - text: Supported device velocity (m/s)?
  utter_ask_service_form_maxNumberofUsers:
  - text: Maximum number of users in slice?
  utter_ask_embb_form_access:
  - text: User data access?
  utter_ask_embb_form_continuity:
  - text: Session and Service Continuity support?
  utter_ask_service_form_dLThptPerSlice:
  - text: Guaranteed Downlink Throughput per slice (Mbps)?
  utter_ask_service_form_dLThptPerUser:
  - text: Guaranteed Downlink Throughput per user (kbps)?
  utter_ask_embb_form_mmte:
  - text: MMTel support?
  utter_ask_embb_form_user_eq:
  - text: Number of user equipments?
  utter_ask_service_form_qos:
  - text: Quality of service (QoS) for Access Network (5QI from [3GPP/ETSI](https://www.etsi.org/deliver/etsi_ts/123500_123599/123501/17.11.00_60/ts_123501v171100p.pdf))?
  utter_utter_ask_embb_form_throughput:
  - text: Maximum downlink throughput per UE (Mbps)?
  utter_ask_embb_form_throughput:
  - text: Maximum downlink throughput per user equipment (Mbps)?
  utter_ask_embb_scenario:
  - buttons:
    - payload: urban
      title: Urban
    - payload: rural
      title: Rural
    - payload: indoor
      title: Indoor hotspot
    - payload: crowd
      title: BB access in a crowd
    - payload: dense_urban
      title: Dense urban
    - payload: broadcast
      title: Broadcast-like services
    - payload: train
      title: High-speed train
    - payload: vehicle
      title: High-speed vehicle
    - payload: airplane
      title: Airplanes connectivity
    text: In which scenario will the service run?
  utter_ask_urllc_scenario:
  - buttons:
    - payload: automation
      title: Discrete automation
    - payload: remote_control
      title: Remote Control
    - payload: monitoring
      title: Monitoring
    - payload: medium_voltage
      title: Electricity - Medium
    - payload: high_voltage
      title: Electricity - High
    - payload: its
      title: Intelligent Transport Systems
    text: In which scenario will the service run?
  utter_requested_embb_service:
  - text: |-
      Great! Your request will be deployed as follows:
       - Type of service: {type_service}
       - Scenario: {embb_scenario}
  utter_requested_urllc_service:
  - text: |-
      Great! Your request will be deployed as follows:
       - Type of service:: {type_service}
       - Scenario: {urllc_scenario}
  utter_ask_otherService:
  - buttons:
    - payload: remote_drone
      title: Remote drone
    - payload: surgey
      title: Assisted Surgey
    - payload: streaming
      title: Live Streaming
    - payload: safety
      title: Public Safety
    text: Please, inform the type of service based on vertical industry applications.
  - buttons:
    - payload: remote_drone
      title: Remote Drone
    - payload: surgey
      title: Assisted Surgey
    - payload: streaming
      title: Live Streaming
    - payload: safety
      title: Public Safety
    text: Based on vertical industries, which application do you want to request?
  utter_ask_service_description:
  - text: Please, describe in more detail the service including the type of traffic. (E.g., v2v, Real-time sensing, live video feed, remote control, server-client sharing of data, gaming,...)
  utter_ask_service_form_jitter:
  - text: E2E Jitter (ms)?
  utter_ask_service_form_latency:
  - text: E2E latency (ms)?
  utter_ask_service_form_packetLoss:
  - text: E2E packet loss (%)?
  utter_ask_service_form_uLThptPerSlice:
  - text: Guaranteed Uplink Throughput per slice (Mbps)?
  utter_ask_service_form_uLThptPerUser:
  - text: Guaranteed Uplink Throughput per user (kbps)?
  utter_summary_service:
  - text: |-
      Great! The attributes of your network slicing are:
       - Application: {otherService}
       - Availability of service: {availability} %
       - Guaranteed downlink throughput per slice: {dLThptPerSlice} Mbps
       - Guaranteed downlink throughput per user: {dLThptPerUser} Kbps
       - End-to-end jitter: {jitter} ms
       - End-to-end latency: {latency} ms 
       - Maximum number of user: {maxNumberofUsers}
       - Packet Loss: {packetLoss} %
       - Quality of Service (5QI): {qos}
       - Guaranteed uplink throughput per slice: {uLThptPerSlice} Mbps
       - Guaranteed uplink throughput per user: {uLThptPerUser} Kbps
  utter_ask_miot_scenario:
  - buttons:
    - payload: medical
      title: Medical Monitoring
    - payload: massive
      title: Massive Connectivity
    text: In which scenario will the service run?
  utter_ask_v2x_scenario:
  - buttons:
    - payload: advanced_driving
      title: Advanced Driving
    - payload: remote_driving
      title: Remote Driving
    text: In which scenario will the service run?
  utter_ask_hmtc_scenario:
  - buttons:
    - payload: hmtc
      title: High-throughput IoT
    text: In which scenario will the service run?
  utter_ask_hdllc_scenario:
  - buttons:
    - payload: rendering
      title: Rendering
    - payload: gaming
      title: Gaming
    text: In which scenario will the service run?
  utter_ask_customService_form_customService:
  - text: Now, we need more details about your service. Which application do you want to request? (Inform a short name)
actions:
- utter_greet
- action_service_embb
- action_service_urllc
- action_service_other
- action_service_miot
- action_service_v2x
- action_service_hmtc
- action_service_hdllc
- action_service_custom
forms:
  service_form:
    required_slots:
      availability:
      - entity: number
        type: from_entity
      dLThptPerSlice:
      - entity: number
        type: from_entity
      dLThptPerUser:
      - entity: number
        type: from_entity
      jitter:
      - entity: number
        type: from_entity
      latency:
      - entity: number
        type: from_entity
      maxNumberofUsers:
      - entity: number
        type: from_entity
      packetLoss:
      - entity: number
        type: from_entity
      qos:
      - entity: number
        type: from_entity
      uLThptPerSlice:
      - entity: number
        type: from_entity
      uLThptPerUser:
      - entity: number
        type: from_entity
  customService_form:
    required_slots:
      customService:
      - entity: custom_service
        type: from_entity
e2e_actions: []
